version: '3.8'

services:
  adoptabot-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: adoptabot-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Uncomment volumes below if needed:
    # volumes:
    #   - ./uploads:/app/uploads
    #   - ./logs:/app/logs
    networks:
      - adoptabot-network

  # Uncomment if you want to add a database service
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: adoptabot-postgres
  #   environment:
  #     POSTGRES_DB: adoptabot
  #     POSTGRES_USER: adoptabot
  #     POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - adoptabot-network
  #   restart: unless-stopped

  # Uncomment if you want to add Redis for caching/sessions
  # redis:
  #   image: redis:7-alpine
  #   container_name: adoptabot-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - adoptabot-network
  #   restart: unless-stopped

networks:
  adoptabot-network:
    driver: bridge

# Uncomment if using database or redis
# volumes:
#   postgres_data:
#   redis_data:
